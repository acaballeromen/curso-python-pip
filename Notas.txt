github
    readme.md file - To show instructions like code, you must type ```sh (or whatever extension you need like py, js, etc.)
    ```sh
    something to say
    ```
.gitignore => visit toptal gitignore.io to get your script of gitignore

pypi.org  = Python Package Index (PyPI) is a repository of software for the Python programming language.
        You can find and install software developed and shared by Python community
        Just find the package you need and get the line to insert in the terminal
pip = command used in python to install a package directly from PyPI
pip install matplotlib = line to install matplotlib from your terminal (install it directly in the folder you are going to work with it)
pip freeze = command to check the packages/libraries installed in your computer

which python = shows where is located python (where is running)
which pip =  show where is located pip
python -m venv env = creates a new virtual environment in terminal (it creates a new directory with name env)
-c command
          Specify the command to execute (see next section).  This terminates the option  list  (following  options  are
          passed as arguments to the command).
-m module-name
          Searches sys.path for the named module and runs the corresponding .py file as a script.

source env/bin/activate = Activates the new virtual environment created
deactivate = close the virtual environment

pip install --upgrade pi = Upgrades the curren version of pip the latest

">" = take the output as the input of other
pip freeze > requirements.txt = sends the result (output) of freeze to a .txt file
cat requirements.txt = shows the information within the file (actually cat is used to concatenate)
pip install -r requirements.txt  = install the packges and libreries within requirements.txt file

git push origin head = uses the current branch in order to avoid using the actual name of the branch (instead using main for instance)

web-server project
source env/bin/activate
Requests: HTTP for Humansâ„¢ = Requests is an elegant and simple HTTP library for Python, built for human beings.
pip install requests = installs the requests package
pip freeze
pip freeze > requirements.txt
cat requirements.txt

app project
source env/bin/activate
pip install pandas = installs pandas package
pip freeze
pip freeze > requirements.txt = to include pandas to the requirements.txt file
cat requirements.txt

web-server project
source env/bin/activate
pip install fastapi 
pip install "uvicorn[standard]"
pip freeze 
pip freeze > requirements.txt
uvicorn main:app --reload = used to create a server with uvicorn in python


Docker
FROM python:3.8 = indicates the python version to work with

WORKDIR /app = indicates the working directory in your machine
COPY requirements.txt /app/requirements.txt = good practice to copy the requirements (left is local and right is sending to the container)
RUN pip install --no-cache-dir  --upgrade -r /app/requirements.txt = installs the dependences. Doesn't apply cache. Apply updates if finded
COPY . /app/ = copies all the information within app folder "." in local to the container
CMD bash -c "while true; do sleep 1; done" = bash code to keep the container runing

docker-compose build = in terminal to build the container
docker-compose up -d = launch the container
docker-compose ps = check container's status
docker-compose exec app-csv bash = enters the project in the container to start working inside
docker-compose down = removes the container

web-server project
CMD ["uvicorn", "main:app", "--host","0.0.0.0", "--port", "80"] = runs the uvicorn server